// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class RegistrationformfunctionalityTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void registrationusingcorrectinput() {
    // Test name: Registration using correct input
    // Step # | name | target | value | comment
    // 1 | open | / |  | 
    driver.get("https://demoqa.com/");
    // 2 | setWindowSize | 1936x1066 |  | 
    driver.manage().window().setSize(new Dimension(1936, 1066));
    // 3 | click | css=.card:nth-child(5) > div |  | 
    driver.findElement(By.cssSelector(".card:nth-child(5) > div")).click();
    // 4 | click | css=.element-group:nth-child(2) .header-wrapper |  | 
    driver.findElement(By.cssSelector(".element-group:nth-child(2) .header-wrapper")).click();
    // 5 | click | css=.show #item-0 |  | 
    driver.findElement(By.cssSelector(".show #item-0")).click();
    // 6 | click | id=firstName |  | 
    driver.findElement(By.id("firstName")).click();
    // 7 | type | id=firstName | Test | 
    driver.findElement(By.id("firstName")).sendKeys("Test");
    // 8 | type | id=lastName | Testur | 
    driver.findElement(By.id("lastName")).sendKeys("Testur");
    // 9 | click | id=userEmail |  | 
    driver.findElement(By.id("userEmail")).click();
    // 10 | type | id=userEmail | 1fqca.test@inbox.testmail.app | 
    driver.findElement(By.id("userEmail")).sendKeys("1fqca.test@inbox.testmail.app");
    // 11 | click | css=.custom-radio:nth-child(1) > .custom-control-label |  | 
    driver.findElement(By.cssSelector(".custom-radio:nth-child(1) > .custom-control-label")).click();
    // 12 | click | id=userNumber |  | 
    driver.findElement(By.id("userNumber")).click();
    // 13 | type | id=userNumber | 1234567890 | 
    driver.findElement(By.id("userNumber")).sendKeys("1234567890");
    // 14 | click | id=dateOfBirthInput |  | 
    driver.findElement(By.id("dateOfBirthInput")).click();
    // 15 | click | css=.react-datepicker__month-select |  | 
    driver.findElement(By.cssSelector(".react-datepicker__month-select")).click();
    // 16 | select | css=.react-datepicker__month-select | label=March | 
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".react-datepicker__month-select"));
      dropdown.findElement(By.xpath("//option[. = 'March']")).click();
    }
    // 17 | click | css=.react-datepicker__year-select |  | 
    driver.findElement(By.cssSelector(".react-datepicker__year-select")).click();
    // 18 | select | css=.react-datepicker__year-select | label=1976 | 
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".react-datepicker__year-select"));
      dropdown.findElement(By.xpath("//option[. = '1976']")).click();
    }
    // 19 | click | css=.react-datepicker__day--001:nth-child(2) |  | 
    driver.findElement(By.cssSelector(".react-datepicker__day--001:nth-child(2)")).click();
    // 20 | click | css=.subjects-auto-complete__value-container |  | 
    driver.findElement(By.cssSelector(".subjects-auto-complete__value-container")).click();
    // 21 | type | id=subjectsInput | Test | 
    driver.findElement(By.id("subjectsInput")).sendKeys("Test");
    // 22 | click | css=.custom-checkbox:nth-child(1) > .custom-control-label |  | 
    driver.findElement(By.cssSelector(".custom-checkbox:nth-child(1) > .custom-control-label")).click();
    // 23 | click | css=.custom-checkbox:nth-child(2) > .custom-control-label |  | 
    driver.findElement(By.cssSelector(".custom-checkbox:nth-child(2) > .custom-control-label")).click();
    // 24 | click | id=currentAddress |  | 
    driver.findElement(By.id("currentAddress")).click();
    // 25 | type | id=currentAddress | test.str | 
    driver.findElement(By.id("currentAddress")).sendKeys("test.str");
    // 26 | click | xpath=//div[@id='state']/div/div |  | 
    driver.findElement(By.xpath("//div[@id=\'state\']/div/div")).click();
    // 27 | click | id=react-select-3-option-0 |  | 
    driver.findElement(By.id("react-select-3-option-0")).click();
    // 28 | click | xpath=//div[@id='city']/div/div |  | 
    driver.findElement(By.xpath("//div[@id=\'city\']/div/div")).click();
    // 29 | click | id=react-select-4-option-0 |  | 
    driver.findElement(By.id("react-select-4-option-0")).click();
    // 30 | click | id=submit |  | 
    driver.findElement(By.id("submit")).click();
    // 31 | mouseOver | id=submit |  | 
    {
      WebElement element = driver.findElement(By.id("submit"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 32 | mouseOut | id=submit |  | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 33 | click | id=closeLargeModal |  | 
    driver.findElement(By.id("closeLargeModal")).click();
  }
}
